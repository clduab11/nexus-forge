# Nexus Forge Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-forge-api
  namespace: nexus-forge
  labels:
    app.kubernetes.io/name: nexus-forge-api
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: nexus-forge
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: nexus-forge-api
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nexus-forge-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: nexus-forge
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nexus-forge-ksa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: api
        image: gcr.io/PROJECT_ID/nexus-forge-api:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nexus-forge-db-credentials
              key: connection-string
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nexus-forge-redis-credentials
              key: connection-string
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: nexus-forge-secrets
              key: jwt-secret
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: nexus-forge-secrets
              key: encryption-key
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: nexus-forge-secrets
              key: sentry-dsn
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
            httpHeaders:
            - name: User-Agent
              value: "Kubernetes-Health-Check"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
            httpHeaders:
            - name: User-Agent
              value: "Kubernetes-Health-Check"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: google-cloud-key
          mountPath: /var/secrets/google
          readOnly: true
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command:
        - "/cloud_sql_proxy"
        - "-instances=PROJECT_ID:REGION:nexus-forge-db=tcp:5432"
        - "-credential_file=/secrets/service_account.json"
        securityContext:
          runAsNonRoot: true
          runAsUser: 2000
          allowPrivilegeEscalation: false
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        volumeMounts:
        - name: google-cloud-key
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: google-cloud-key
        secret:
          secretName: nexus-forge-gcp-credentials
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - nexus-forge-api
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: workload
                operator: In
                values:
                - general
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: nexus-forge-api
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-forge-api
  namespace: nexus-forge
  labels:
    app.kubernetes.io/name: nexus-forge-api
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: nexus-forge
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "nexus-forge-backend-config"}'
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nexus-forge-api
    app.kubernetes.io/component: backend
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nexus-forge-api-hpa
  namespace: nexus-forge
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nexus-forge-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nexus-forge-api-pdb
  namespace: nexus-forge
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nexus-forge-api
      app.kubernetes.io/component: backend
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: nexus-forge-backend-config
  namespace: nexus-forge
spec:
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /health/ready
    port: 8000
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity:
    affinityType: "CLIENT_IP"
    affinityCookieTtlSec: 3600
  timeoutSec: 300
  customRequestHeaders:
    headers:
    - "X-Real-IP:{client_ip}"
    - "X-Forwarded-Proto:{scheme}"
  securityPolicy:
    name: "nexus-forge-security-policy"
  iap:
    enabled: false
    oauthclientCredentials:
      secretName: nexus-forge-oauth-credentials